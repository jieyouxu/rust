- name: Close Stale Issues
  uses: actions/stale@v4.1.1
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is 
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is 
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Exempt draft pull requests from being marked as stale. Default to false.
    exempt-draft-pr: # optional, default is false
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    # A comma delimited list of labels to add when a stale issue or pull request receives activity and has the stale-issue-label or stale-pr-label removed from it.
    labels-to-add-when-unstale: # optional, default is 
    # A comma delimited list of labels to remove when a stale issue or pull request receives activity and has the stale-issue-label or stale-pr-label removed from it.
    labels-to-remove-when-unstale: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the issues and pull requests.
    ignore-updates: # optional, default is false
    # Any update (update/comment) can reset the stale idle time on the issues. Override "ignore-updates" option regarding only the issues.
    ignore-issue-updates: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the pull requests. Override "ignore-updates" option regarding only the pull requests.
    ignore-pr-updates: # optional, default is 
# This file was automatically generated by the expand-yaml-anchors tool. The
# source file that generated this one is:
#
#   src/ci/github-actions/ci.yml
#
# Once you make changes to that file you need to run:
#
#   ./x.py run src/tools/expand-yaml-anchors/
#
# The CI build will fail if the tool is not run after changes to this file.

---- name: Cache

  uses: actions/cache@v1.2.1

  with:

    # A directory to store and save the cache

    path: 

    # An explicit key for restoring and saving the cache

    key: 

    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key

    restore-keys: # optional
name: CI
"on":
  push:
    branches:
      - auto
      - try
      - try-perf
      - master
  pull_request:
    branches:
      - "**"
permissions:
  contents: read
defaults:
  run:
    shell: bash
jobs:
  pr:
    permissions:
      actions: write
    name: "PR - ${{ matrix.name }}"
    env:
      CI_JOB_NAME: "${{ matrix.name }}"
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
      SCCACHE_BUCKET: rust-lang-ci-sccache2
      TOOLSTATE_REPO: "https://github.com/rust-lang-nursery/rust-toolstate"
      CACHE_DOMAIN: ci-caches.rust-lang.org
    if: "github.event_name == 'pull_request'"
    continue-on-error: "${{ matrix.name == 'mingw-check-tidy' }}"
    strategy:
      matrix:
        include:
          - name: mingw-check
            os: ubuntu-20.04-16core-64gb
            env: {}
          - name: mingw-check-tidy
            os: ubuntu-20.04-16core-64gb
            env: {}
          - name: x86_64-gnu-llvm-14
            os: ubuntu-20.04-16core-64gb
            env: {}
          - name: x86_64-gnu-tools
            os: ubuntu-20.04-16core-64gb
            env: {}
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    steps:
      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
      - name: checkout the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: configure the PR in which the error message will be posted
        run: "echo \"[CI_PR_NUMBER=$num]\""
        env:
          num: "${{ github.event.number }}"
        if: "success() && !env.SKIP_JOB && github.event_name == 'pull_request'"
      - name: add extra environment variables
        run: src/ci/scripts/setup-environment.sh
        env:
          EXTRA_VARIABLES: "${{ toJson(matrix.env) }}"
        if: success() && !env.SKIP_JOB
      - name: decide whether to skip this job
        run: src/ci/scripts/should-skip-this.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the channel matches the target branch
        run: src/ci/scripts/verify-channel.sh
        if: success() && !env.SKIP_JOB
      - name: configure GitHub Actions to kill the build when outdated
        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.github_token }}"
        if: "success() && !env.SKIP_JOB && github.ref != 'refs/heads/try' && github.ref != 'refs/heads/try-perf'"
      - name: collect CPU statistics
        run: src/ci/scripts/collect-cpu-stats.sh
        if: success() && !env.SKIP_JOB
      - name: show the current environment
        run: src/ci/scripts/dump-environment.sh
        if: success() && !env.SKIP_JOB
      - name: install sccache
        run: src/ci/scripts/install-sccache.sh
        if: success() && !env.SKIP_JOB
      - name: select Xcode
        run: src/ci/scripts/select-xcode.sh
        if: success() && !env.SKIP_JOB
      - name: install clang
        run: src/ci/scripts/install-clang.sh
        if: success() && !env.SKIP_JOB
      - name: install WIX
        run: src/ci/scripts/install-wix.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: checkout submodules
        run: src/ci/scripts/checkout-submodules.sh
        if: success() && !env.SKIP_JOB
      - name: install MSYS2
        run: src/ci/scripts/install-msys2.sh
        if: success() && !env.SKIP_JOB
      - name: install MinGW
        run: src/ci/scripts/install-mingw.sh
        if: success() && !env.SKIP_JOB
      - name: install ninja
        run: src/ci/scripts/install-ninja.sh
        if: success() && !env.SKIP_JOB
      - name: enable ipv6 on Docker
        run: src/ci/scripts/enable-docker-ipv6.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: ensure line endings are correct
        run: src/ci/scripts/verify-line-endings.sh
        if: success() && !env.SKIP_JOB
      - name: ensure backported commits are in upstream branches
        run: src/ci/scripts/verify-backported-commits.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the stable version number is correct
        run: src/ci/scripts/verify-stable-version-number.sh
        if: success() && !env.SKIP_JOB
      - name: run the build
        run: src/ci/scripts/run-build-from-ci.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.CACHES_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}"
          TOOLSTATE_REPO_ACCESS_TOKEN: "${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}"
        if: success() && !env.SKIP_JOB
      - name: upload artifacts to S3
        run: src/ci/scripts/upload-artifacts.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}"
        if: "success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')"
  auto:
    permissions:
      actions: write
    name: "auto - ${{ matrix.name }}"
    env:
      CI_JOB_NAME: "${{ matrix.name }}"
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
      SCCACHE_BUCKET: rust-lang-ci-sccache2
      DEPLOY_BUCKET: rust-lang-ci2
      TOOLSTATE_REPO: "https://github.com/rust-lang-nursery/rust-toolstate"
      TOOLSTATE_ISSUES_API_URL: "https://api.github.com/repos/rust-lang/rust/issues"
      TOOLSTATE_PUBLISH: 1
      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZI5DHEBFL
      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZN24CBO55
      AWS_REGION: us-west-1
      CACHE_DOMAIN: ci-caches.rust-lang.org
    if: "github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'"
    strategy:
      matrix:
        include:
          - name: aarch64-gnu
            os:
              - self-hosted
              - ARM64
              - linux
          - name: arm-android
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: armhf-gnu
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-aarch64-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-android
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-arm-linux
            os: ubuntu-20.04-16core-64gb
            env: {}
          - name: dist-armhf-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-armv7-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-i586-gnu-i586-i686-musl
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-i686-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-loongarch64-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-mips-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-mips64-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-mips64el-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-mipsel-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-powerpc-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-powerpc64-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-powerpc64le-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-riscv64-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-s390x-linux
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-various-1
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-various-2
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-x86_64-freebsd
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-x86_64-illumos
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-x86_64-linux
            os: ubuntu-20.04-16core-64gb
            env: {}
          - name: dist-x86_64-linux-alt
            env:
              IMAGE: dist-x86_64-linux
            os: ubuntu-20.04-16core-64gb
          - name: dist-x86_64-musl
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: dist-x86_64-netbsd
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: i686-gnu
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: i686-gnu-nopt
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: mingw-check
            os: ubuntu-20.04-4core-16gb
            env: {}
          - name: test-various
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: wasm32
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: x86_64-gnu
            os: ubuntu-20.04-4core-16gb
            env: {}
          - name: x86_64-gnu-stable
            env:
              IMAGE: x86_64-gnu
              RUST_CI_OVERRIDE_RELEASE_CHANNEL: stable
              CI_ONLY_WHEN_CHANNEL: nightly
            os: ubuntu-20.04-4core-16gb
          - name: x86_64-gnu-aux
            os: ubuntu-20.04-4core-16gb
            env: {}
          - name: x86_64-gnu-debug
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: x86_64-gnu-distcheck
            os: ubuntu-20.04-8core-32gb
            env: {}
          - name: x86_64-gnu-llvm-16
            env:
              RUST_BACKTRACE: 1
            os: ubuntu-20.04-8core-32gb
          - name: x86_64-gnu-llvm-15
            env:
              RUST_BACKTRACE: 1
            os: ubuntu-20.04-8core-32gb
          - name: x86_64-gnu-llvm-14
            env:
              RUST_BACKTRACE: 1
            os: ubuntu-20.04-8core-32gb
          - name: x86_64-gnu-llvm-14-stage1
            env:
              RUST_BACKTRACE: 1
            os: ubuntu-20.04-8core-32gb
          - name: x86_64-gnu-nopt
            os: ubuntu-20.04-4core-16gb
            env: {}
          - name: x86_64-gnu-tools
            env:
              DEPLOY_TOOLSTATES_JSON: toolstates-linux.json
            os: ubuntu-20.04-8core-32gb
          - name: dist-x86_64-apple
            env:
              SCRIPT: "./x.py dist bootstrap --include-default-paths --host=x86_64-apple-darwin --target=x86_64-apple-darwin"
              RUST_CONFIGURE_ARGS: "--enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false --set rust.lto=thin"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              MACOSX_DEPLOYMENT_TARGET: 10.7
              SELECT_XCODE: /Applications/Xcode_13.4.1.app
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
              DIST_REQUIRE_ALL_TOOLS: 1
            os: macos-latest
          - name: dist-apple-various
            env:
              SCRIPT: "./x.py dist bootstrap --include-default-paths --host='' --target=aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim"
              RUST_CONFIGURE_ARGS: "--enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              MACOSX_DEPLOYMENT_TARGET: 10.7
              SELECT_XCODE: /Applications/Xcode_13.4.1.app
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
            os: macos-latest
          - name: dist-x86_64-apple-alt
            env:
              SCRIPT: "./x.py dist bootstrap --include-default-paths"
              RUST_CONFIGURE_ARGS: "--enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              MACOSX_DEPLOYMENT_TARGET: 10.7
              SELECT_XCODE: /Applications/Xcode_13.4.1.app
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
            os: macos-latest
          - name: x86_64-apple-1
            env:
              SCRIPT: "./x.py --stage 2 test --exclude tests/ui --exclude tests/rustdoc --exclude tests/run-make-fulldeps"
              RUST_CONFIGURE_ARGS: "--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              MACOSX_DEPLOYMENT_TARGET: 10.8
              MACOSX_STD_DEPLOYMENT_TARGET: 10.7
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
            os: macos-latest
          - name: x86_64-apple-2
            env:
              SCRIPT: "./x.py --stage 2 test tests/ui tests/rustdoc tests/run-make-fulldeps"
              RUST_CONFIGURE_ARGS: "--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              MACOSX_DEPLOYMENT_TARGET: 10.8
              MACOSX_STD_DEPLOYMENT_TARGET: 10.7
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
            os: macos-latest
          - name: dist-aarch64-apple
            env:
              SCRIPT: "./x.py dist bootstrap --include-default-paths --stage 2"
              RUST_CONFIGURE_ARGS: "--build=x86_64-apple-darwin --host=aarch64-apple-darwin --target=aarch64-apple-darwin --enable-full-tools --enable-sanitizers --enable-profiler --disable-docs --set rust.jemalloc --set llvm.ninja=false"
              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1
              SELECT_XCODE: /Applications/Xcode_13.4.1.app
              USE_XCODE_CLANG: 1
              MACOSX_DEPLOYMENT_TARGET: 11.0
              MACOSX_STD_DEPLOYMENT_TARGET: 11.0
              NO_LLVM_ASSERTIONS: 1
              NO_DEBUG_ASSERTIONS: 1
              NO_OVERFLOW_CHECKS: 1
              DIST_REQUIRE_ALL_TOOLS: 1
              JEMALLOC_SYS_WITH_LG_PAGE: 14
            os: macos-latest
          - name: x86_64-msvc-1
            env:
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --enable-profiler"
              SCRIPT: make ci-subset-1
            os: windows-2019-8core-32gb
          - name: x86_64-msvc-2
            env:
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --enable-profiler"
              SCRIPT: make ci-subset-2
            os: windows-2019-8core-32gb
          - name: i686-msvc-1
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-msvc"
              SCRIPT: make ci-subset-1
            os: windows-2019-8core-32gb
          - name: i686-msvc-2
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-msvc"
              SCRIPT: make ci-subset-2
            os: windows-2019-8core-32gb
          - name: x86_64-msvc-cargo
            env:
              SCRIPT: python x.py --stage 2 test src/tools/cargotest src/tools/cargo
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --enable-lld"
            os: windows-2019-8core-32gb
          - name: x86_64-msvc-tools
            env:
              SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json"
              DEPLOY_TOOLSTATES_JSON: toolstates-windows.json
            os: windows-2019-8core-32gb
          - name: i686-mingw-1
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-gnu"
              SCRIPT: make ci-mingw-subset-1
              NO_DOWNLOAD_CI_LLVM: 1
              CUSTOM_MINGW: 1
            os: windows-2019-8core-32gb
          - name: i686-mingw-2
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-gnu"
              SCRIPT: make ci-mingw-subset-2
              NO_DOWNLOAD_CI_LLVM: 1
              CUSTOM_MINGW: 1
            os: windows-2019-8core-32gb
          - name: x86_64-mingw-1
            env:
              SCRIPT: make ci-mingw-subset-1
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-gnu --enable-profiler"
              NO_DOWNLOAD_CI_LLVM: 1
              CUSTOM_MINGW: 1
            os: windows-2019-8core-32gb
          - name: x86_64-mingw-2
            env:
              SCRIPT: make ci-mingw-subset-2
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-gnu --enable-profiler"
              NO_DOWNLOAD_CI_LLVM: 1
              CUSTOM_MINGW: 1
            os: windows-2019-8core-32gb
          - name: dist-x86_64-msvc
            env:
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --host=x86_64-pc-windows-msvc --target=x86_64-pc-windows-msvc --enable-full-tools --enable-profiler"
              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc python src/ci/stage-build.py python x.py dist bootstrap --include-default-paths
              DIST_REQUIRE_ALL_TOOLS: 1
            os: windows-2019-8core-32gb
          - name: dist-i686-msvc
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-msvc --host=i686-pc-windows-msvc --target=i686-pc-windows-msvc,i586-pc-windows-msvc --enable-full-tools --enable-profiler"
              SCRIPT: python x.py dist bootstrap --include-default-paths
              DIST_REQUIRE_ALL_TOOLS: 1
            os: windows-2019-8core-32gb
          - name: dist-aarch64-msvc
            env:
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --host=aarch64-pc-windows-msvc --enable-full-tools --enable-profiler"
              SCRIPT: python x.py dist bootstrap --include-default-paths
              DIST_REQUIRE_ALL_TOOLS: 1
              WINDOWS_SDK_20348_HACK: 1
            os: windows-2019-8core-32gb
          - name: dist-i686-mingw
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler"
              NO_DOWNLOAD_CI_LLVM: 1
              SCRIPT: python x.py dist bootstrap --include-default-paths
              CUSTOM_MINGW: 1
              DIST_REQUIRE_ALL_TOOLS: 1
            os: windows-2019-8core-32gb
          - name: dist-x86_64-mingw
            env:
              SCRIPT: python x.py dist bootstrap --include-default-paths
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler"
              NO_DOWNLOAD_CI_LLVM: 1
              CUSTOM_MINGW: 1
              DIST_REQUIRE_ALL_TOOLS: 1
            os: windows-2019-8core-32gb
          - name: dist-x86_64-msvc-alt
            env:
              RUST_CONFIGURE_ARGS: "--build=x86_64-pc-windows-msvc --enable-extended --enable-profiler"
              SCRIPT: python x.py dist bootstrap --include-default-paths
            os: windows-2019-8core-32gb
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    steps:
      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
      - name: checkout the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: configure the PR in which the error message will be posted
        run: "echo \"[CI_PR_NUMBER=$num]\""
        env:
          num: "${{ github.event.number }}"
        if: "success() && !env.SKIP_JOB && github.event_name == 'pull_request'"
      - name: add extra environment variables
        run: src/ci/scripts/setup-environment.sh
        env:
          EXTRA_VARIABLES: "${{ toJson(matrix.env) }}"
        if: success() && !env.SKIP_JOB
      - name: decide whether to skip this job
        run: src/ci/scripts/should-skip-this.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the channel matches the target branch
        run: src/ci/scripts/verify-channel.sh
        if: success() && !env.SKIP_JOB
      - name: configure GitHub Actions to kill the build when outdated
        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.github_token }}"
        if: "success() && !env.SKIP_JOB && github.ref != 'refs/heads/try' && github.ref != 'refs/heads/try-perf'"
      - name: collect CPU statistics
        run: src/ci/scripts/collect-cpu-stats.sh
        if: success() && !env.SKIP_JOB
      - name: show the current environment
        run: src/ci/scripts/dump-environment.sh
        if: success() && !env.SKIP_JOB
      - name: install sccache
        run: src/ci/scripts/install-sccache.sh
        if: success() && !env.SKIP_JOB
      - name: select Xcode
        run: src/ci/scripts/select-xcode.sh
        if: success() && !env.SKIP_JOB
      - name: install clang
        run: src/ci/scripts/install-clang.sh
        if: success() && !env.SKIP_JOB
      - name: install WIX
        run: src/ci/scripts/install-wix.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: checkout submodules
        run: src/ci/scripts/checkout-submodules.sh
        if: success() && !env.SKIP_JOB
      - name: install MSYS2
        run: src/ci/scripts/install-msys2.sh
        if: success() && !env.SKIP_JOB
      - name: install MinGW
        run: src/ci/scripts/install-mingw.sh
        if: success() && !env.SKIP_JOB
      - name: install ninja
        run: src/ci/scripts/install-ninja.sh
        if: success() && !env.SKIP_JOB
      - name: enable ipv6 on Docker
        run: src/ci/scripts/enable-docker-ipv6.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: ensure line endings are correct
        run: src/ci/scripts/verify-line-endings.sh
        if: success() && !env.SKIP_JOB
      - name: ensure backported commits are in upstream branches
        run: src/ci/scripts/verify-backported-commits.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the stable version number is correct
        run: src/ci/scripts/verify-stable-version-number.sh
        if: success() && !env.SKIP_JOB
      - name: run the build
        run: src/ci/scripts/run-build-from-ci.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.CACHES_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}"
          TOOLSTATE_REPO_ACCESS_TOKEN: "${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}"
        if: success() && !env.SKIP_JOB
      - name: upload artifacts to S3
        run: src/ci/scripts/upload-artifacts.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}"
        if: "success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')"
  try:
    permissions:
      actions: write
    name: "try - ${{ matrix.name }}"
    env:
      DIST_TRY_BUILD: 1
      CI_JOB_NAME: "${{ matrix.name }}"
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
      SCCACHE_BUCKET: rust-lang-ci-sccache2
      DEPLOY_BUCKET: rust-lang-ci2
      TOOLSTATE_REPO: "https://github.com/rust-lang-nursery/rust-toolstate"
      TOOLSTATE_ISSUES_API_URL: "https://api.github.com/repos/rust-lang/rust/issues"
      TOOLSTATE_PUBLISH: 1
      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZI5DHEBFL
      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZN24CBO55
      AWS_REGION: us-west-1
      CACHE_DOMAIN: ci-caches.rust-lang.org
    if: "github.event_name == 'push' && (github.ref == 'refs/heads/try' || github.ref == 'refs/heads/try-perf') && github.repository == 'rust-lang-ci/rust'"
    strategy:
      matrix:
        include:
          - name: dist-x86_64-linux
            os: ubuntu-20.04-16core-64gb
            env: {}
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    steps:
      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
      - name: checkout the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: configure the PR in which the error message will be posted
        run: "echo \"[CI_PR_NUMBER=$num]\""
        env:
          num: "${{ github.event.number }}"
        if: "success() && !env.SKIP_JOB && github.event_name == 'pull_request'"
      - name: add extra environment variables
        run: src/ci/scripts/setup-environment.sh
        env:
          EXTRA_VARIABLES: "${{ toJson(matrix.env) }}"
        if: success() && !env.SKIP_JOB
      - name: decide whether to skip this job
        run: src/ci/scripts/should-skip-this.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the channel matches the target branch
        run: src/ci/scripts/verify-channel.sh
        if: success() && !env.SKIP_JOB
      - name: configure GitHub Actions to kill the build when outdated
        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.github_token }}"
        if: "success() && !env.SKIP_JOB && github.ref != 'refs/heads/try' && github.ref != 'refs/heads/try-perf'"
      - name: collect CPU statistics
        run: src/ci/scripts/collect-cpu-stats.sh
        if: success() && !env.SKIP_JOB
      - name: show the current environment
        run: src/ci/scripts/dump-environment.sh
        if: success() && !env.SKIP_JOB
      - name: install sccache
        run: src/ci/scripts/install-sccache.sh
        if: success() && !env.SKIP_JOB
      - name: select Xcode
        run: src/ci/scripts/select-xcode.sh
        if: success() && !env.SKIP_JOB
      - name: install clang
        run: src/ci/scripts/install-clang.sh
        if: success() && !env.SKIP_JOB
      - name: install WIX
        run: src/ci/scripts/install-wix.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: checkout submodules
        run: src/ci/scripts/checkout-submodules.sh
        if: success() && !env.SKIP_JOB
      - name: install MSYS2
        run: src/ci/scripts/install-msys2.sh
        if: success() && !env.SKIP_JOB
      - name: install MinGW
        run: src/ci/scripts/install-mingw.sh
        if: success() && !env.SKIP_JOB
      - name: install ninja
        run: src/ci/scripts/install-ninja.sh
        if: success() && !env.SKIP_JOB
      - name: enable ipv6 on Docker
        run: src/ci/scripts/enable-docker-ipv6.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: ensure line endings are correct
        run: src/ci/scripts/verify-line-endings.sh
        if: success() && !env.SKIP_JOB
      - name: ensure backported commits are in upstream branches
        run: src/ci/scripts/verify-backported-commits.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the stable version number is correct
        run: src/ci/scripts/verify-stable-version-number.sh
        if: success() && !env.SKIP_JOB
      - name: run the build
        run: src/ci/scripts/run-build-from-ci.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.CACHES_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}"
          TOOLSTATE_REPO_ACCESS_TOKEN: "${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}"
        if: success() && !env.SKIP_JOB
      - name: upload artifacts to S3
        run: src/ci/scripts/upload-artifacts.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}"
        if: "success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')"
  master:
    name: master
    runs-on: ubuntu-latest
    env:
      SCCACHE_BUCKET: rust-lang-ci-sccache2
      DEPLOY_BUCKET: rust-lang-ci2
      TOOLSTATE_REPO: "https://github.com/rust-lang-nursery/rust-toolstate"
      TOOLSTATE_ISSUES_API_URL: "https://api.github.com/repos/rust-lang/rust/issues"
      TOOLSTATE_PUBLISH: 1
      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZI5DHEBFL
      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZN24CBO55
      AWS_REGION: us-west-1
      CACHE_DOMAIN: ci-caches.rust-lang.org
    if: "github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'rust-lang-ci/rust'"
    steps:
      - name: checkout the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: publish toolstate
        run: src/ci/publish_toolstate.sh
        shell: bash
        env:
          TOOLSTATE_REPO_ACCESS_TOKEN: "${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}"
        if: success() && !env.SKIP_JOB
  try-success:
    needs:
      - try
    if: "success() && github.event_name == 'push' && (github.ref == 'refs/heads/try' || github.ref == 'refs/heads/try-perf') && github.repository == 'rust-lang-ci/rust'"
    steps:
      - name: mark the job as a success
        run: exit 0
        shell: bash
    name: bors build finished
    runs-on: ubuntu-latest
  try-failure:
    needs:
      - try
    if: "!success() && github.event_name == 'push' && (github.ref == 'refs/heads/try' || github.ref == 'refs/heads/try-perf') && github.repository == 'rust-lang-ci/rust'"
    steps:
      - name: mark the job as a failure
        run: exit 1
        shell: bash
    name: bors build finished
    runs-on: ubuntu-latest
  auto-success:
    needs:
      - auto
    if: "success() && github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'"
    steps:
      - name: mark the job as a success
        run: exit 0
        shell: bash
    name: bors build finished
    runs-on: ubuntu-latest
  auto-failure:
    needs:
      - auto
    if: "!success() && github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'"
    steps:
      - name: mark the job as a failure
        run: exit 1
        shell: bash
    name: bors build finished
    runs-on: ubuntu-latest
